// <auto-generated />
using System;
using Agua_e_Aventura.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Agua_e_Aventura.Migrations
{
    [DbContext(typeof(AguaAventuraDbContext))]
    [Migration("20240204183503_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Agua_e_Aventura.Models.Domain.Comentarios.ComentarioPraia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ComentarioUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataResposta")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomedeUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PraiaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PraiaId");

                    b.ToTable("ComentariosPraias");
                });

            modelBuilder.Entity("Agua_e_Aventura.Models.Domain.Comentarios.RespostaComentarioPraia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComentarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataResposta")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomedeUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespostasUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComentarioId");

                    b.ToTable("RespostasComentariosPraias");
                });

            modelBuilder.Entity("Agua_e_Aventura.Models.Domain.Fotos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("PraiaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PraiaId");

                    b.ToTable("Fotos");
                });

            modelBuilder.Entity("Agua_e_Aventura.Models.Domain.Praia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descrição")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(3,1)");

                    b.Property<Guid?>("RegiaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UrlFotosId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RegiaoId");

                    b.ToTable("Praias");
                });

            modelBuilder.Entity("Agua_e_Aventura.Models.Domain.Regiao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regioes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("77ffa92c-a132-4e17-ab20-864e8fc76737"),
                            Nome = "Manaus"
                        },
                        new
                        {
                            Id = new Guid("99581561-7fe3-4325-b5dc-c58f2d9b8a27"),
                            Nome = "Manacapuru"
                        },
                        new
                        {
                            Id = new Guid("8e462a08-2a90-4261-b007-e3652ea74764"),
                            Nome = "Presidente Figuereido"
                        },
                        new
                        {
                            Id = new Guid("4249ae61-c978-4c30-a8d6-5a6dec597325"),
                            Nome = "Iranduba"
                        });
                });

            modelBuilder.Entity("Agua_e_Aventura.Models.Domain.Comentarios.ComentarioPraia", b =>
                {
                    b.HasOne("Agua_e_Aventura.Models.Domain.Praia", null)
                        .WithMany("Comentarios")
                        .HasForeignKey("PraiaId");
                });

            modelBuilder.Entity("Agua_e_Aventura.Models.Domain.Comentarios.RespostaComentarioPraia", b =>
                {
                    b.HasOne("Agua_e_Aventura.Models.Domain.Comentarios.ComentarioPraia", "Comentario")
                        .WithMany("Resposta")
                        .HasForeignKey("ComentarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comentario");
                });

            modelBuilder.Entity("Agua_e_Aventura.Models.Domain.Fotos", b =>
                {
                    b.HasOne("Agua_e_Aventura.Models.Domain.Praia", null)
                        .WithMany("Fotos")
                        .HasForeignKey("PraiaId");
                });

            modelBuilder.Entity("Agua_e_Aventura.Models.Domain.Praia", b =>
                {
                    b.HasOne("Agua_e_Aventura.Models.Domain.Regiao", "Regioes")
                        .WithMany()
                        .HasForeignKey("RegiaoId");

                    b.Navigation("Regioes");
                });

            modelBuilder.Entity("Agua_e_Aventura.Models.Domain.Comentarios.ComentarioPraia", b =>
                {
                    b.Navigation("Resposta");
                });

            modelBuilder.Entity("Agua_e_Aventura.Models.Domain.Praia", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Fotos");
                });
#pragma warning restore 612, 618
        }
    }
}
